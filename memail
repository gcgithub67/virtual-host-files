##
# You should look at the following URL's in order to grasp a solid understanding
# of Nginx configuration files in order to fully unleash the power of Nginx.
# https://www.nginx.com/resources/wiki/start/
# https://www.nginx.com/resources/wiki/start/topics/tutorials/config_pitfalls/
# https://wiki.debian.org/Nginx/DirectoryStructure
#
# In most cases, administrators will remove this file from sites-enabled/ and
# leave it as reference inside of sites-available where it will continue to be
# updated by the nginx packaging team.
#
# This file will automatically load configuration files provided by other
# applications, such as Drupal or Wordpress. These applications will be made
# available underneath a path with that package name, such as /drupal8.
#
# Please see /usr/share/doc/nginx-doc/examples/ for more detailed examples.
##

# Default server configuration
#

	#listen [::]:80 default_server;

	# SSL configuration
	#
	# listen 443 ssl default_server;
	# listen [::]:443 ssl default_server;
	#
	# Note: You should disable gzip for SSL traffic.
	# See: https://bugs.debian.org/773332
	#
	# Read up on ssl_ciphers to ensure a secure configuration.
	# See: https://bugs.debian.org/765782
	#
	# Self signed certs generated by the ssl-cert package
	# Don't use them in a production server!
	#
#	 include snippets/snakeoil.conf;

server {
	# listen 80;
	root /var/www/htmlm;

	# Add index.php to the list if you are using PHP
	index index.html index.htm index.nginx-debian.html index.php;

	server_name mail.webterse.com ;
	autoindex off;


	# pass PHP scripts to FastCGI server
	#
	location ~ \.php$ {
		include snippets/fastcgi-php.conf;
	
	#
	#	# With php-fpm (or other unix sockets):
		allow 192.168.1.0/24;
		allow 127.0.0.1;
		#deny all;
		include fastcgi_params;
		fastcgi_pass unix:/var/run/php/php7.2-fpm.sock;
		fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
		fastcgi_intercept_errors on;
		#fastcgi_param HTTPS on;
	#	# With php-cgi (or other tcp sockets):
	#	fastcgi_pass 127.0.0.1:9000;
	}

	# deny access to .htaccess files, if Apache's document root
	# concurs with nginx's one
	#
	location ~ /\.ht {
		deny all;
	}


   location @fallback {
		return 301 http://www.jurassicsystems.com/;
	}
	

	ssl_trusted_certificate /etc/ssl/private/webterse.com.crt;
	ssl_client_certificate /etc/ssl/private/webterse.com.crt;
	ssl_verify_client on;
  
  location / {
		if ($ssl_client_s_dn !~* "gaurav@webterse.com|client1@webterse.com") {
			return 301 http://www.jurassicsystems.com/;
		}
		error_page 403 @fallback;
	}

	location ~ ^/(README|INSTALL|LICENSE|CHANGELOG|UPGRADING)$ {
		deny all;
	}

	location ~ ^/(config|bin|SQL|logs|temp)/ {
		deny all;
	}


	 listen 443 ssl default_server; # managed by Certbot
 	 ssl_certificate /etc/letsencrypt/live/mail.webterse.com/fullchain.pem; # managed by Certbot
   	 ssl_certificate_key /etc/letsencrypt/live/mail.webterse.com/privkey.pem; # managed by Certbot
   	 include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
   	 ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

}


server {
    if ($host = mail.webterse.com) {
        return 301 https://$host$request_uri;
    } # managed by Certbot

	
	listen 80;

	server_name mail.webterse.com;
    return 404; # managed by Certbot
}

##server{
#server_name 192.168.1.2; return 301 https://mail.webterse.com$request_uri;
#}

